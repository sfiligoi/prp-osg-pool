FROM nvidia/cuda:10.0-runtime-centos7

RUN yum update -y

# Needed to get the recently deprecated libcudart.so symlink in place
RUN yum -y install cuda-cudart-dev-10-0-10.0.130-1.x86_64

# OSG RPMs
RUN yum -y install https://repo.opensciencegrid.org/osg/3.4/osg-3.4-el7-release-latest.rpm && \
    yum -y install epel-release \
                   yum-plugin-priorities && \
    yum -y install  \
                   osg-wn-client \
                   redhat-lsb-core && \
    yum -y install condor && \
    yum -y install supervisor

# Enable OpenCL
# As suggested by https://github.com/WIPACrepo/pyglidein/blob/master/Dockerfile
RUN mkdir -p /etc/OpenCL/vendors && \
    echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# Some helper OpenCL tools
RUN yum install -y clinfo

# Suggested RPMs from https://hub.docker.com/r/opensciencegrid/osgvo-el7/dockerfile
RUN yum -y groupinstall "Compatibility Libraries" \
                        "Development Tools" \
                        "Scientific Support"

# LIGO required packages, may already be present
RUN yum install -y vim \
      git \
      python-devel \
      gsl-devel \
      gcc-c++ \
      make \
      cuda-libraries-dev-10-0 \
      cuda-cublas-dev-10-0 \
      cuda-nvcc-10-0


# RIFT LSCSoft and python dependencies
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py
RUN pip --no-cache-dir install --ignore-installed -U setuptools \
           pip \
           cupy  \
           h5py \
           numba \
           vegas \
           corner \
           scikit-learn \
           healpy \
           matplotlib \
           lalsuite \
           gwdatafind \
           ligo-segments \
           python-ligo-lw 
#           ligo.skymap
RUN CFLAGS='-std=c99' pip --no-cache-dir install -U gwsurrogate 

# RIFT
# Modules and scripts run directly from repository
ENV RIFT_INSTALL_DIR /opt/lscsoft/rift
ENV ILE_DIR ${RIFT_INSTALL_DIR}/MonteCarloMarginalizeCode/Code
ENV PATH ${PATH}:${ILE_DIR}
ENV PYTHONPATH ${PYTHONPATH}:${ILE_DIR}
ENV GW_SURROGATE gwsurrogate
RUN git clone https://git.ligo.org/richard-oshaughnessy/research-projects-RIT.git ${RIFT_INSTALL_DIR} \
      && cd ${RIFT_INSTALL_DIR} \
      && git checkout temp-RIT-Tides-port_master-GPUIntegration 



RUN yum clean all

# Condor does not pick up the system libraries
ADD wn-gpu/cudalib.sh /etc/profile.d/

ADD wn-gpu/01_resource_limits.config /etc/condor/config.d/
ADD 97_procd_workaround.config /etc/condor/config.d/
ADD 98_security.config /etc/condor/config.d/
ADD 99_daemons.config /etc/condor/config.d/
ADD wn-gpu/02_gpu_jobs.config /etc/condor/config.d/

ADD sbin/* /usr/local/sbin/

ADD supervisord.conf /etc/
RUN mkdir -p /var/log/supervisor

RUN mkdir -p /etc/supervisord_startup/image-config.d
ADD image-config.d/* /etc/supervisord_startup/image-config.d/
ADD wn-gpu/image-config.d/* /etc/supervisord_startup/image-config.d/


CMD ["/usr/local/sbin/supervisord_startup.sh"]

